//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nox {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ValidationResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nox.ValidationResources", typeof(ValidationResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection type options for {0} does not have a name specified..
        /// </summary>
        internal static string CollectionTypeOptionsNameEmpty {
            get {
                return ResourceManager.GetString("CollectionTypeOptionsNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection type options for {0} does not have a type specified..
        /// </summary>
        internal static string CollectionTypeOptionsTypeEmpty {
            get {
                return ResourceManager.GetString("CollectionTypeOptionsTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data connection &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string DataConnectionProviderEmpty {
            get {
                return ResourceManager.GetString("DataConnectionProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain command &apos;{0}&apos; for entity &apos;{1}&apos; has a duplicate name. Domain command names must be unique in the solution..
        /// </summary>
        internal static string DomainCommandNameDuplicate {
            get {
                return ResourceManager.GetString("DomainCommandNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Domain command for entity &apos;{0}&apos; does not have a name specified. All domain commands must have a unique name..
        /// </summary>
        internal static string DomainCommandNameEmpty {
            get {
                return ResourceManager.GetString("DomainCommandNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain command &apos;{0}&apos; for entity &apos;{1}&apos; is missing a type. Domain commands must all have a type specified..
        /// </summary>
        internal static string DomainCommandTypeEmpty {
            get {
                return ResourceManager.GetString("DomainCommandTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No entities found in domain definition. a Nox domain must contain at least one entity..
        /// </summary>
        internal static string DomainEntitiesEmpty {
            get {
                return ResourceManager.GetString("DomainEntitiesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain query &apos;{0}&apos; for entity &apos;{1}&apos; has a duplicate name. Domain query names must be unique in the solution..
        /// </summary>
        internal static string DomainQueryNameDuplicate {
            get {
                return ResourceManager.GetString("DomainQueryNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Domain query for entity &apos;{0}&apos; is missing a name. All domain queries must have a unique name..
        /// </summary>
        internal static string DomainQueryNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Request Input for domain query &apos;{0}&apos; is missing a name. Domain query request inputs must all have a unique name..
        /// </summary>
        internal static string DomainQueryRequestNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryRequestNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Request Input for domain query &apos;{0}&apos; is missing a type. Domain query request inputs must all have a type specified..
        /// </summary>
        internal static string DomainQueryRequestTypeEmpty {
            get {
                return ResourceManager.GetString("DomainQueryRequestTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Response Output for domain query &apos;{0}&apos; is missing a name. Domain query response outputs must all have a unique name..
        /// </summary>
        internal static string DomainQueryResponseNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain query &apos;{0}&apos; for entity &apos;{1}&apos; is missing a Response Output. All domain queries must have a response output..
        /// </summary>
        internal static string DomainQueryResponseOutputEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseOutputEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Response Output for domain query &apos;{0}&apos; is missing a type. Domain query response outputs must all have a type specified..
        /// </summary>
        internal static string DomainQueryResponseTypeEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dto &apos;{0}&apos; does not have any attributes defined. All dto&apos;s must have at least one attribute..
        /// </summary>
        internal static string DtoAttributesEmpty {
            get {
                return ResourceManager.GetString("DtoAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Data transfer object &apos;{0}&apos; has a duplicate name. All dtos must have a unique name in the solution..
        /// </summary>
        internal static string DtoNameDuplicate {
            get {
                return ResourceManager.GetString("DtoNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Dto in the application does not have a name specified. All dtos must have a unique name specified..
        /// </summary>
        internal static string DtoNameEmpty {
            get {
                return ResourceManager.GetString("DtoNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, email server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string EmailServerProviderEmpty {
            get {
                return ResourceManager.GetString("EmailServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; does not have any attributes. a Nox entity must have at least one attribute..
        /// </summary>
        internal static string EntityAttributesEmpty {
            get {
                return ResourceManager.GetString("EntityAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply defaults for entity &apos;{0}&apos;..
        /// </summary>
        internal static string EntityDefaultsFalse {
            get {
                return ResourceManager.GetString("EntityDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity name: {0} is duplicated. Entity names must be unique in a solution..
        /// </summary>
        internal static string EntityNameDuplicate {
            get {
                return ResourceManager.GetString("EntityNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Entity has been specified without a name. All Nox entities in a Nox domain must have a unique name..
        /// </summary>
        internal static string EntityNameEmpty {
            get {
                return ResourceManager.GetString("EntityNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a description. All owned relationships must have a description..
        /// </summary>
        internal static string EntityOwnedRelationshipDescriptionEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipDescriptionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The onwed relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have an entity it refers to. All owned relationships must refer to an existing entity in the domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipEntityEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipEntityEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that does not exist in the domain definition. Owned relationships must refer to entities that exist in the domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipEntityMissing {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipEntityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; is duplicated. Owned relationships must be unique in a domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipNameDuplicate {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Owned relationship for entity &apos;{0}&apos; does not have a name. All owned relationships must have a unique name..
        /// </summary>
        internal static string EntityOwnedRelationshipNameEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a relationship specified. All owned relationships must have a relationship ({2})..
        /// </summary>
        internal static string EntityOwnedRelationshipRelationshipEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipRelationshipEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply persistence defaults for entity &apos;{0}&apos;..
        /// </summary>
        internal static string EntityPersistenceDefaultsFalse {
            get {
                return ResourceManager.GetString("EntityPersistenceDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The table name for persistence of entity &apos;{0}&apos; is not specified. All Nox entities must persist to a table..
        /// </summary>
        internal static string EntityPersistenceTableNameEmpty {
            get {
                return ResourceManager.GetString("EntityPersistenceTableNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a description. All entity relationships must have a description..
        /// </summary>
        internal static string EntityRelationshipDescriptionEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipDescriptionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have an entity it refers to. All entity relationships must refer to an existing entity in the domain definition..
        /// </summary>
        internal static string EntityRelationshipEntityEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipEntityEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that does not exist in the domain definition. Entity relationships must refer to entities that exist in the domain definition..
        /// </summary>
        internal static string EntityRelationshipEntityMissing {
            get {
                return ResourceManager.GetString("EntityRelationshipEntityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Entity relationship &apos;{0}&apos; is duplicated. Entity relationships must be unique in a domain definition..
        /// </summary>
        internal static string EntityRelationshipNameDuplicate {
            get {
                return ResourceManager.GetString("EntityRelationshipNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Entity relationship for entity &apos;{0}&apos; does not have a name. All entity relationships must have a unique name..
        /// </summary>
        internal static string EntityRelationshipNameEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a relationship specified. All entity relationships must have a relationship ({2})..
        /// </summary>
        internal static string EntityRelationshipRelationshipEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipRelationshipEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment name &apos;{0}&apos; is duplicated. Environment names must be unique in a solution..
        /// </summary>
        internal static string EnvironmentNameDuplicate {
            get {
                return ResourceManager.GetString("EnvironmentNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Environment is missing a name. a Name must be specified for each environment..
        /// </summary>
        internal static string EnvironmentNameEmpty {
            get {
                return ResourceManager.GetString("EnvironmentNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a match section specified. All integration lookups must have a match..
        /// </summary>
        internal static string EtlLookupMatchEmpty {
            get {
                return ResourceManager.GetString("EtlLookupMatchEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a source column specified. All integration lookups must have a source column..
        /// </summary>
        internal static string EtlLookupSourceColumnEmpty {
            get {
                return ResourceManager.GetString("EtlLookupSourceColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a target attribute specified. All integration lookups must have a target attribute..
        /// </summary>
        internal static string EtlLookupTargetAttributeEmpty {
            get {
                return ResourceManager.GetString("EtlLookupTargetAttributeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Mapping for integration &apos;{0}&apos; does not have a source column specified. All integration mappings must have a source column..
        /// </summary>
        internal static string EtlMappingSourceColumnMissing {
            get {
                return ResourceManager.GetString("EtlMappingSourceColumnMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Mapping for integration &apos;{0}&apos; does not have a target attribute specified. All integration mappings must have a target attribute..
        /// </summary>
        internal static string EtlMappingTargetAttributeMissing {
            get {
                return ResourceManager.GetString("EtlMappingTargetAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a lookup column specified. All integration lookups must have a source column..
        /// </summary>
        internal static string EtlMatchLookupColumnEmpty {
            get {
                return ResourceManager.GetString("EtlMatchLookupColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a return column specified. All integration lookups must have a return column..
        /// </summary>
        internal static string EtlMatchReturnColumnEmpty {
            get {
                return ResourceManager.GetString("EtlMatchReturnColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a table specified. All integration lookups must have a table..
        /// </summary>
        internal static string EtlMatchTableEmpty {
            get {
                return ResourceManager.GetString("EtlMatchTableEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; has a duplicate name. Integration names must be unique in the solution..
        /// </summary>
        internal static string EtlNameDuplicate {
            get {
                return ResourceManager.GetString("EtlNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Integration in the application definition is missing a name. All integrations must have a unique name..
        /// </summary>
        internal static string EtlNameEmpty {
            get {
                return ResourceManager.GetString("EtlNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &apos;{0}&apos; for integration &apos;{1}&apos; does not have a start specified for its schedule. All scheduled integrations must have a start defined..
        /// </summary>
        internal static string EtlScheduleStartEmpty {
            get {
                return ResourceManager.GetString("EtlScheduleStartEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &apos;{0}&apos; for integration &apos;{1}&apos; does not have a data connection specified. All integration sources must have a data connection specified in the Infrastructure section of your yaml definition...
        /// </summary>
        internal static string EtlSourceDataConnectionEmpty {
            get {
                return ResourceManager.GetString("EtlSourceDataConnectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &apos;{0}&apos; for integration &apos;{1}&apos; refers to a data connection &apos;{2}&apos; that is not defined. All data connections must be defined in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string EtlSourceDataConnectionMissing {
            get {
                return ResourceManager.GetString("EtlSourceDataConnectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; does not have a source specified. All integrations must have a source and target specified..
        /// </summary>
        internal static string EtlSourceMissing {
            get {
                return ResourceManager.GetString("EtlSourceMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration &apos;{0}&apos; does not have a name specified. All integration sources must have a name specified..
        /// </summary>
        internal static string EtlSourceNameEmpty {
            get {
                return ResourceManager.GetString("EtlSourceNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; of integration &apos;{1}&apos; does not have a data connection specified. All integration targets must have a data connection specified in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string EtlTargetDataConnectionEmpty {
            get {
                return ResourceManager.GetString("EtlTargetDataConnectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; for integration &apos;{1}&apos; refers to a data connection &apos;{2}&apos; that is not defined. All data connections must be defined in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string EtlTargetDataConnectionMissing {
            get {
                return ResourceManager.GetString("EtlTargetDataConnectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; does not have a target specified. All integrations must have a source and target specified..
        /// </summary>
        internal static string EtlTargetMissing {
            get {
                return ResourceManager.GetString("EtlTargetMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target of integration &apos;{0}&apos; does not have a name specified. All integration targets must have a name..
        /// </summary>
        internal static string EtlTargetNameEmpty {
            get {
                return ResourceManager.GetString("EtlTargetNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, im server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string ImServerProviderEmpty {
            get {
                return ResourceManager.GetString("ImServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The messaging section of the infrastructure definition is missing. Infrastructure messaging is required in a Nox solution defnition..
        /// </summary>
        internal static string InfrastructureMessagingEmpty {
            get {
                return ResourceManager.GetString("InfrastructureMessagingEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The persistence section of the infrastructure definition is missing. Infrastructure persistence is required in a Nox solution defnition..
        /// </summary>
        internal static string InfrastructurePersistenceEmpty {
            get {
                return ResourceManager.GetString("InfrastructurePersistenceEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object type options attributes for {0} are missing. Object type options must have at least one attribute specified..
        /// </summary>
        internal static string ObjectTypeOptionsAttributesEmpty {
            get {
                return ResourceManager.GetString("ObjectTypeOptionsAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database server for infrastructure persistence has not been specified. a Nox solution must always have a database definition..
        /// </summary>
        internal static string PersistenceDatabaseServerEmpty {
            get {
                return ResourceManager.GetString("PersistenceDatabaseServerEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, security, secrets, secrets server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string SecretsServerProviderEmpty {
            get {
                return ResourceManager.GetString("SecretsServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secrets valid for in {0} must have a valid time span specified..
        /// </summary>
        internal static string SecretsValidForInvalidTimespan {
            get {
                return ResourceManager.GetString("SecretsValidForInvalidTimespan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; of the server definition for &apos;{1}&apos; is duplicated elsewhere in the solution definition. Server names must be unique in a Nox solution definition..
        /// </summary>
        internal static string ServerNameDuplicate {
            get {
                return ResourceManager.GetString("ServerNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server definition for {0} is missing a name. All server definitions must have a unique name in a Nox solution..
        /// </summary>
        internal static string ServerNameEmpty {
            get {
                return ResourceManager.GetString("ServerNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is missing a name. All {1} must have a name specified..
        /// </summary>
        internal static string SimpleTypeNameEmpty {
            get {
                return ResourceManager.GetString("SimpleTypeNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is missing a type. All {1} must have a type specified..
        /// </summary>
        internal static string SimpleTypeTypeEmpty {
            get {
                return ResourceManager.GetString("SimpleTypeTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, sms server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string SmsServerProviderEmpty {
            get {
                return ResourceManager.GetString("SmsServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution name missing. a Name must be specified for the solution..
        /// </summary>
        internal static string SolutionNameEmpty {
            get {
                return ResourceManager.GetString("SolutionNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team Member &apos;{0}&apos; has no roles defined. Each member in the solution team must have at least one role..
        /// </summary>
        internal static string TeamRolesEmpty {
            get {
                return ResourceManager.GetString("TeamRolesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The team member user name &apos;{0}&apos; is duplicated. Team user names must be unique in a solution..
        /// </summary>
        internal static string TeamUserNameDuplicate {
            get {
                return ResourceManager.GetString("TeamUserNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Team member is missing a username. a UserName must be specified for all team members..
        /// </summary>
        internal static string TeamUserNameEmpty {
            get {
                return ResourceManager.GetString("TeamUserNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Containers folder missing. a Containers folder must be specified under versionControl::folders..
        /// </summary>
        internal static string VersionControlContainersFolderEmpty {
            get {
                return ResourceManager.GetString("VersionControlContainersFolderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Control host missing. a Host must be specified for Version Control..
        /// </summary>
        internal static string VersionControlHostEmpty {
            get {
                return ResourceManager.GetString("VersionControlHostEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Control provider missing. a Version Control Provider must be specified in a solution..
        /// </summary>
        internal static string VersionControlProviderEmpty {
            get {
                return ResourceManager.GetString("VersionControlProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Source code folder missing. a Source Code folder must be specified under versionControl::folders..
        /// </summary>
        internal static string VersionControlSourceFolderEmpty {
            get {
                return ResourceManager.GetString("VersionControlSourceFolderEmpty", resourceCulture);
            }
        }
    }
}
