#
# workplace.solution.nox.yaml
#
# yaml-language-server: $schema=../schemas/solution.json
#


name: WorkplaceService

description: Microservice for maintaining and finding places to work

overview: https://regusit.atlassian.net/wiki/spaces/heimdall/pages/2616393814/Workplace+Services

variables:
  DATABASE_PROVIDER: sqlServer
  DATABASE_SERVER: localhost
  DATABASE_USER: sa
  DATABASE_PASSWORD: Developer*123
  DATABASE_PORT: "5432"

environments:

  - name: dev
    description: Used for development and testing

  - name: test
    description: Test environment 

  - name: uat
    description: For them end users to check it works

  - name: prod
    description: Production environment used for, well - the real thing!

versionControl:
  provider: AzureDevops
  host: https://dev.azure.com/iwgplc
  folders:
    sourceCode: /src
    containers: /docker

team:

  - name: Andre Sharpe
    userName: andre.sharpe@iwgplc.com
    roles: [Architect, Owner, Administrator, Developer, Manager]

  - name: Jan Schutte
    userName: jan.schutte@iwgplc.com
    roles: [Architect, Administrator, Developer, DevOpsEngineer]

  - name: Anton Du Plessis
    userName: anton.duplessis@iwgplc.com
    roles: [ProjectManager]

  - name: Morne Van Zyl
    userName: morne.vanzyl@iwgplc.com
    roles: [TechnicalWriter]

  - name: Dmytro Dorodnykh
    userName: dmytro.dorodnykh@iwgplc.com
    roles: [Developer]

  - name: Oleksandr Vlasenko
    userName: oleksandr.vlasenko@regus.com
    roles: [Architect, Developer]

domain:

  entities:

    - name: Country
      description: The list of countries
      
      userInterface:
        icon: world

      persistence:
        isVersioned: true
        tableName: Country
        schema: dbo
        create:
          isEnabled: true
          raiseEvents: true
        read:
          isEnabled: true
        update:
          isEnabled: true
          raiseEvents: true
        delete:
          isEnabled: true
          raiseEvents: true
          useSoftDelete: true

      relationships:

        - name: CountryAcceptsCurrency
          description: accepts as legal tender
          relationship: OneOrMany
          entity: Currency

      ownedRelationships:

        - name: CountryLocalNames
          description: is also know as
          relationship: OneOrMany
          entity: CountryLocalNames

      queries:

        - name: GetCountriesByContinent
          description: Returns a list of countries for a given continent

          requestInput: 
            - name: continentName
              description: Africa, Europe, Asia, Australia, North America, or South America
              type: text
              textTypeOptions: 
                isUnicode: false
                
          responseOutput:
            name: countriesByContinentDto
            type: collection
            collectionTypeOptions:
              name: countryInfo
              type: object
              objectTypeOptions:
                attributes:

                  - name: CountryId
                    description: The country's Id
                    type: countryCode2

                  - name: CountryName
                    description: The country name
                    type: text
        
      commands:

        - name: UpdatePopulationStatistics
          description: Instructs the service to collect updated population statistics
          type: object
          objectTypeOptions:
            attributes:
              - name: CountryCode
                type: countryCode2
          emitEvents: [CountryUpdatedEvent]

      keys:

        - name: Id
          type: text
          textTypeOptions:
            isUnicode: false
            minLength: 2
            maxLength: 2

      attributes:

        - name: Name
          description: The country's common name
          type: text
          textTypeOptions:
            minLength: 4
            maxLength: 63
          isRequired: true

        - name: FormalName
          description: The country's official name
          type: text
          textTypeOptions:
            minLength: 4
            maxLength: 63
          isRequired: true

        - name: AlphaCode3
          description: The country's official ISO 4217 alpha-3 code
          type: text
          textTypeOptions:
            isUnicode: false
            minLength: 3
            maxLength: 3
          isRequired: true

        - name: AlphaCode2
          description: The country's official ISO 4217 alpha-2 code
          type: text
          textTypeOptions:
            isUnicode: false
            minLength: 2
            maxLength: 2
          isRequired: true

        - name: NumericCode
          description: The country's official ISO 4217 alpha-3 code
          type: number
          numberTypeOptions:
            minValue: 4
            maxValue: 894
          isRequired: true

        - name: DialingCodes
          description: The country's phone dialing codes (comma-delimited)
          type: text
          textTypeOptions:
            isUnicode: false
            maxLength: 31

        - name: Capital
          description: The capital city of the country
          type: text
          textTypeOptions:
            maxLength: 63

        - name: Demonym
          description: Noun denoting the natives of the country
          type: text
          textTypeOptions:
            maxLength: 63

        - name: AreaInSquareKilometres
          description: Country area in square kilometers 
          type: number
          numberTypeOptions:
            minValue: 0
            maxValue: 20000000 # 20,000,000 > Russia
          isRequired: true

        - name: GeoCoord
          description: The the position of the workplace's point on the surface of the Earth
          type: latlong

        - name: GeoRegion
          description: The region the country is in
          type: text
          textTypeOptions:
            isUnicode: false
            maxLength: 8
          isRequired: true

        - name: GeoSubRegion
          description: The sub-region the country is in
          type: text
          textTypeOptions:
            isUnicode: false
            maxLength: 32
          isRequired: true

        - name: GeoWorldRegion
          description: The world region the country is in
          type: text
          textTypeOptions:
            isUnicode: false
            maxLength: 4
          isRequired: true

        - name: Population
          description: The estimated population of the country
          type: number
          numberTypeOptions:
            minValue: 0

        - name: TopLevelDomains
          description: The top level internet domains regitered to the country (comma-delimited)
          type: text
          textTypeOptions:
            maxLength: 31

    - name: Currency
      description: The list of currencies

      relationships:

        - name: CurrencyIsLegalTenderForCountry
          description: is legal tender for
          relationship: ZeroOrMany
          entity: Country
      
    - name: CountryLocalNames
      description: The name of a country in other languages

    - name: CurrencyCashBalance

      description: The cash balance in Store

      keys:

        - name: Store
          type: entity
          entityTypeOptions:
            entity: Store
          isRequired: true

        - name: Currency
          type: entity
          entityTypeOptions:
            entity: Currency
          isRequired: true

      attributes:

      - name: Amount
        description: The amount
        type: number
        numberTypeOptions:
          minValue: 0
          decimalDigits: 4
        isRequired: true

      - name: OperationLimit
        description: The Operation Limit
        type: number
        numberTypeOptions:
          minValue: 0
          decimalDigits: 4
        isRequired: false

infrastructure: 

  persistence:

    databaseServer:
      name: SampleCurrencyDb

      # Sql Server
      server: ${{ env.DATABASE_SERVER }}
      provider: ${{ env.DATABASE_PROVIDER }}
      port: ${{ env.DATABASE_PORT }}
      user: ${{ env.DATABASE_USER }}  
      password: ${{ env.DATABASE_PASSWORD }}
      options: ${{ env.DATABASE_OPTIONS }}

      ### Postgres
      #provider: postgres

      ### MySql  
      #provider: mySql

    cacheServer:
      name: SampleCurrencyCache
      server: redisCacheName.redis.cache.windows.net
      provider: azureRedis
      user: CacheUser
      password: CachePassword
      
    searchServer:
      name: SampleCurrencySearch
      server: SampleSearch.com
      provider: elasticSearch
      user: searchUser
      password: searchPwd

    eventSourceServer:
      name: SampleEventSource
      server: currencyEventSource
      provider: eventStoreDb
      
  messaging:
    
    domainEventServer:
      name: MediatR
      provider: mediatR

    integrationEventServer:
      name: IntegrationBus
      provider: rabbitMQ
      server: rabbitmq://localhost
      port: 5672
      user: guest
      password: guest

  services:
    
    apiServer:
      name: SampleApiService
      server: localhost
      httpPort: 8080
      httpsPort: 4433

    bffServer:
      name: SampleBffService
      server: localhost
      httpPort: 8081
      httpsPort: 4431

  dependencies:
    
    notificationServices:
    
      emailServer:
        name: SampleEmailServer
        provider: sendGrid
        server: sendgrid.com
        user: SampleCurrencyUser
        port: 1234
        password: MyPassword

      smsServer:
        name: SampleSmsServer
        server: twilio.com
        provider: twilio
        user: SampleCurrencyUser
        password: MyPassword

      imServer:
        name: SampleImServer
        server: whatsapp.com
        provider: whatsApp
        user: whatsappuser
        password: whatsapppassword

    observability:
      name: SampleObservability
      server: localhost
      httpPort: 8200

    translationService:
      name: SampleTranslationService
      server: translator.iwgplc.com
      httpsPort: 443

  
  




